"""create likes table

Revision ID: 397a04094684
Revises: 3ec1eac48d9b
Create Date: 2024-11-23 16:30:38.033398

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "397a04094684"
down_revision: Union[str, None] = "3ec1eac48d9b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "likes",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("post_id", sa.UUID(), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["posts.id"],
            name=op.f("fk_likes_post_id_posts"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_likes")),
        sa.UniqueConstraint("id", name=op.f("uq_likes_id")),
    )
    op.add_column(
        "posts",
        sa.Column(
            "like_number", sa.Integer(), server_default="0", nullable=False
        ),
    )
    op.drop_constraint("uq_posts_title", "posts", type_="unique")
    op.create_unique_constraint(op.f("uq_posts_id"), "posts", ["id"])
    op.drop_column("posts", "likes")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "posts",
        sa.Column(
            "likes",
            sa.INTEGER(),
            server_default=sa.text("0"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.drop_constraint(op.f("uq_posts_id"), "posts", type_="unique")
    op.create_unique_constraint("uq_posts_title", "posts", ["title"])
    op.drop_column("posts", "like_number")
    op.drop_table("likes")
    # ### end Alembic commands ###
